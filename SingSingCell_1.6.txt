Bootstrap: debootstrap
OSVersion: jammy
MirrorURL: http://archive.ubuntu.com/ubuntu/

%post
  ## COPY PASTE FROM THE MINIMAL.TXT ##############################
  export PYTHONNOUSERSITE="true"
  sed -i 's/main/main restricted universe/g' /etc/apt/sources.list
  apt-get update
  # Install R, Python, misc. utilities
  apt-get install -y libopenblas-dev libcurl4-openssl-dev libopenmpi-dev openmpi-bin openmpi-common openmpi-doc openssh-client openssh-server

  apt install -y wget build-essential git vim software-properties-common

  apt install -y curl vim git libhdf5-dev
  apt install -y libssl-dev libxml2-dev python3-pip

  apt install -y nodejs cmake

  ## next is important for python tsne
  apt install -y libatlas-base-dev liblapack-dev
  ## cellexalvrR
  apt install -y pandoc pip

  pip install --upgrade pip
  pip install --upgrade jupyter jupyterlab ipython-autotime ipywidgets meson

  add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
  wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
  add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

  apt  install -y r-cran-irkernel r-cran-irdisplay r-cran-seurat python3-ipykernel

  #######################################################################

  apt-get install libc6-dev ## TSNE needs that
  apt-get install libfreetype6-dev libgl1-mesa-glx
  apt remove python3-matplotlib # there is a version incompatibility with the new versions that fucks python up! 2024.04.17
  pip install --upgrade scanpy scvelo anndata
  
  pip install --upgrade scikit-network
  pip install --upgrade Sphinx sphinx-autodoc-typehints nbsphinx sphinx_rtd_theme

  pip install git+https://github.com/fraenkel-lab/pcst_fast.git@deb3236cc26ee9fee77d5af40fac3f12bb753850
  pip install -U topacedo
  pip install --upgrade scarf

  pip install --upgrade scikit-network scanpy[louvain]
  pip install --upgrade scanpy[leiden]
  pip install --upgrade scrublet
  pip install --upgrade pypairs

  #pip install --upgrade igraph
  #pip install --upgrade phate

  pip install --upgrade scvelo

  pip install --upgrade harmonypy
  pip install mnnpy
  pip install bbknn

  #pip install palantir
#  pip install --upgrade tsne

  #pip install pybind11 hnswlib memory_profiler

  pip install --upgrade procpath

  ## the templates funnily are root read only and hence unusable

  pip install --upgrade nbconvert

  pip install jupyter_contrib_nbextensions

  #pip install git+https://github.com/stela2502/ScanpyAutoAnalyzer
  #chmod 777 -R  /usr/share/jupyter/nbconvert/templates/

  # to create genomes for alevin-fry

  apt install -y python3.10-venv
  
  #mkdir -p /opt/python_envs/
  #python3 -m venv /opt/python_envs/pyroe
  #source /opt/python_envs/pyroe/bin/activate
  #pip install pyroe ipykernel anndata
  #python3 -m ipykernel install --name=pyroe
  #deactivate

  #python3 -m venv /opt/python_envs/cellphonedb
  #source /opt/python_envs/cellphonedb/bin/activate
  #pip install cellphonedb ipykernel anndata
  #python3 -m ipykernel install --name=cellphonedb
  #deactivate

  apt  install -y gffread rustc bedtools ## in the wrong version
  #wget https://github.com/arq5x/bedtools2/releases/download/v2.30.0/bedtools.static.binary
  #mv bedtools.static.binary /usr/bin/bedtools
  #chmod a+x /usr/bin/bedtools
  
  # cool integration method using PyTorch in the back.
  pip install scvi-tools

  #and here comes the scary bit: Rust and alevin-fry - install it from git :-D
  #curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  #source ~/.cargo/env
  #git clone https://github.com/COMBINE-lab/alevin-fry.git
  #cd alevin-fry
  #cargo build --release  
  #cp -r target/release/ /opt/alevin-fry
  #echo "export PATH=/opot/alevin-fry/:$PATH" >~/.bashrc

  #wget https://github.com/COMBINE-lab/salmon/releases/download/v1.9.0/salmon-1.9.0_linux_x86_64.tar.gz
  #tar -zxf salmon-1.9.0_linux_x86_64.tar.gz
  #mv salmon-1.9.0_linux_x86_64 /opt/

  # Install R

  echo "install.packages('devtools')" > Install_devtools.R
  R CMD BATCH Install_devtools.R

  echo "install.packages('Seurat')" > Install_Seurat.R
  R CMD BATCH Install_Seurat.R

  echo "devtools::install_github('sonejilab/cellexalvrR' )" > Install_cellexalvrR.R
  R CMD BATCH Install_cellexalvrR.R

  echo "devtools::install_github('satijalab/seurat-data')" > Install_seurat-data.R
  R CMD BATCH Install_seurat-data.R

  echo "if (!require('BiocManager', quietly = TRUE))" > Install_DESeq2.R
  echo "  install.packages('BiocManager')" >> Install_DESeq2.R
  echo "" >> Install_DESeq2.R
  echo "BiocManager::install('DESeq2')"  >> Install_DESeq2.R
  R CMD BATCH Install_DESeq2.R

  echo "BiocManager::install('SingleR')" > Install_SingleR.R
  echo "BiocManager::install('celldex')" >> Install_SingleR.R
  echo "BiocManager::install('scRNAseq')" >> Install_SingleR.R
  echo "BiocManager::install('scuttle')" >> Install_SingleR.R
  echo "BiocManager::install('zellkonverter')" >> Install_SingleR.R
  echo "BiocManager::install('scran')" >> Install_SingleR.R
  R CMD BATCH Install_SingleR.R

  ## SingleR
  mkdir -p /opt/celldex/dataset/
  chmod +r -R /opt/celldex

  echo "library(celldex)"  > Install_SingleR.R
  echo "hpca.se <- HumanPrimaryCellAtlasData()"  >> Install_SingleR.R
  echo "save( hpca.se, file='/opt/celldex/dataset/HumanPrimaryCellAtlasData.RData' )"  >> Install_SingleR.R
  
  echo "hpca.se <- ImmGenData()"  >> Install_SingleR.R
  echo "save( hpca.se, file='/opt/celldex/dataset/ImmGenData.RData' )"  >> Install_SingleR.R

  echo "hpca.se <- MouseRNAseqData()"  >> Install_SingleR.R
  echo "save( hpca.se, file='/opt/celldex/dataset/MouseRNAseqData.RData' )"  >> Install_SingleR.R

  echo "hpca.se <- BlueprintEncodeData()"  >> Install_SingleR.R
  echo "save( hpca.se, file='/opt/celldex/dataset/BlueprintEncodeData.RData' )"  >> Install_SingleR.R

  echo "hpca.se <- DatabaseImmuneCellExpressionData()"  >> Install_SingleR.R
  echo "save( hpca.se, file='/opt/celldex/dataset/DatabaseImmuneCellExpressionData.RData' )"  >> Install_SingleR.R

  echo "hpca.se <- NovershternHematopoieticData()"  >> Install_SingleR.R
  echo "save( hpca.se, file='/opt/celldex/dataset/NovershternHematopoieticData.RData' )"  >> Install_SingleR.R

  echo "hpca.se <- MonacoImmuneData()"  >> Install_SingleR.R
  echo "save( hpca.se, file='/opt/celldex/dataset/MonacoImmuneData.RData' )"  >> Install_SingleR.R
  
  R CMD BATCH Install_SingleR.R

  echo "BiocManager::install(c('circlize', 'digest', 'cluster', 'ComplexHeatmap' ))"  >> Install_DESeq2_heatmap.R
  R CMD BATCH Install_DESeq2_heatmap.R

  ## CA - Correspondence Analysis in R
  echo 'install.packages(c("FactoMineR", "factoextra"))' > install_ca.R
  R CMD BATCH install_ca.R
  ## and Python
  pip install prince


  mkdir /workspace
  echo "jupyter lab --port 9734 --ip=0.0.0.0 --allow-root --no-browser" > /workspace/launch_jupyter.sh
  chmod +x /workspace/launch_jupyter.sh

%runscript
  /workspace/launch_jupyter.sh

%environment
  export PYTHONNOUSERSITE="true"

